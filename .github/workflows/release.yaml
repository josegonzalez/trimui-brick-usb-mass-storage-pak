---
name: "release"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Bump type"
        default: "patch"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  attestations: write
  id-token: write
  contents: write

jobs:
  version:
    name: version
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.next-tag.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: latest-tag
        run: |
          echo GIT_LATEST_TAG="$(git describe --tags "$(git rev-list --tags --max-count=1)")" >>"$GITHUB_OUTPUT"

      - name: Compute Next Tag
        id: next-tag
        uses: docker://ghcr.io/dokku/semver-generator:latest
        with:
          bump: ${{ github.event.inputs.bump_type }}
          input: ${{ steps.latest-tag.outputs.GIT_LATEST_TAG }}

  build:
    name: build
    runs-on: ubuntu-24.04-arm
    needs: version

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Create release
        run: make clean build release
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.version }}

      - name: Get Pak Name
        id: pak-name
        run: |
          echo "PAK_NAME=$(jq -r .name pak.json)" >> $GITHUB_OUTPUT

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-path: "dist/${{ steps.pak-name.outputs.PAK_NAME }}.pak.zip"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: "${{ steps.pak-name.outputs.PAK_NAME }}.pak.zip"
          path: "dist/${{ steps.pak-name.outputs.PAK_NAME }}.pak.zip"

  release:
    name: release
    runs-on: ubuntu-24.04
    needs:
      - version
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Get Pak Name
        id: pak-name
        run: |
          echo "PAK_NAME=$(jq -r .name pak.json)" >> $GITHUB_OUTPUT

      - name: Download Artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          name: "${{ steps.pak-name.outputs.PAK_NAME }}.pak.zip"
          path: "dist"

      - name: Validate Artifact exists
        run: |
          if [ ! -f "dist/${{ steps.pak-name.outputs.PAK_NAME }}.pak.zip" ]; then
            echo "Artifact does not exist"
            exit 1
          fi

      - name: Create and Push Tag
        run: |
          make bump-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pak.json
          git commit -m "Release $RELEASE_VERSION"
          git tag "$RELEASE_VERSION"
          git push origin "$RELEASE_VERSION"
          git push origin main
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.version }}

      - name: Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: dist/*
          generate_release_notes: true
          make_latest: "true"
          tag_name: ${{ needs.version.outputs.version }}
